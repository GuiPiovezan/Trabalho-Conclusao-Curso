<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctImagePerfil.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC0AAAAtCAYAAAA6GuKaAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAABFhJREFUaEPtmGlMVFcUxwdmRoYZZmN1Zx2sTauCUmwNNq6J1aSVuCAubdKSEEGT
        EltqYhOlpktiGoNSx65qC21am8GYSlITNXGJ2AAyIRCQwAfpB5BvJEj48u8914NVS8c37z4ZTPglNwP/
        d9/Mf+4759xzx4TnkCnTE8WU6YnCcNM3rt9A9dGj+PSTw/jafxLdd+7wFeMwzPRJvx8uhwPOWDvcjji4
        7A75ajNbkZGahsbGRp6pjiGmVxQsh9MWiyRvPKymKLxeUICtmzYh5+UFMJtMmJ6YhCjxeujgQb5DDWXT
        b67fgES3BzHRFlR+8CGr/zIyMoI1K1ch3uWGNSoa333zLV/Rj5LpK5cuCbNmxJgtqA8EWB2ft3fsRHJ8
        AkxixVVReoelea8gyeNF0ZYtrIRmVsp0JIin8vGBA6zoQ8k0rRolXGdnJyuhOV5dDW+cEy/Nf5EVfeg2
        3dHeISuFRSSeVlpaWuSXtE+LYUUfuk23BlulgWlRZlaeTjAYlPdQDqigFB5Uxhxi1QYHB1kJTd1PtfCI
        8Eifm8qKPpRM+zIyZbnbX1nJSmgWL1go5+8uLWVFH0qmvxc1lx63xRSNvrt3WR0f2jHd9jiZvAP9/azq
        Q8k0kZ2RhRlJyTJMGhoaWH2cw1VVMo6pcuwpK2NVP8qmCdqmaQt32uziS2SKcPkIXx45gj27y+B1ukRI
        eOESlWb1ipV8hxqGmCaKi4pkYpLJRxsmWl3qP7747HOeqY5hponR0VF8VVODknffQ/HWIuwtK8cvdT/z
        VeMw1HRXVxcab97ExT8vouHCBVwWvUlzUxP6FRPvSZRMDw0NoUq0m0sW5Tzc0t1PDhEidmuMbKzWrlod
        uS5veHgYG9a9gWhhNEG0nDKOhUEyTpWEeouchYswPzsbHodTzvNQfIt5NCjG91VU8LuFT9im62prpbmU
        hERZ5nzpGTLJ2traeMb4XLt6Ffver0B83APjtMnQk+nt6eEZ2gnLtP/ECblq1BdnpqXL+NXD6R9OyWZr
        ZnKKXIDu7m6+og3Npv/u65MfQPW48K2NrKqRKc6OY08sHDSb3lxYKA3n5eayYgx0KFgv8iMcNJumOKSk
        onIWaTSbpoMrJc7t1lZWjGXdmrV4Z9cu/i80mk3bLFZZ1pqbm1kxjoF7AzLBKWe0MClMD9+/L5LRJnsX
        LUTU9Nlff8O5QAA/njmDRHGqp/D74/x5BM7+jvpAPc/6LxEzXVpSIkOC3pN+yKHyR4OOY6RRqNDvgeMR
        MdO0Q9LmQke2eVk+pM2eg7RZs/GCz4csscvOFX93tLfz7MeZFDFNPJOYjmXTPb29rBjHPXGap11RqXr8
        deuWbDeX5eeLsVT+KjpnxkykikeWv3gJCl59TeoqIy8nF3vLy/kThRFhWMn09m3bZPtIKzs2KLtpjCWK
        EeNRk9TtaT2l/+9XqzleI7o6vzz6P4txrPoYgjp3V23PY5IxZXqimDI9MQD/AGgepZZsUkSQAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>